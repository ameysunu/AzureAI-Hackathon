@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject IHttpClientFactory HttpClientFactory
@page "/dashboard";

<div class="main-page" style="@(data != null ? $"background-image: url('{data.Image}'); background-size: cover; background-position: center; background-repeat: no-repeat; min-height: 100vh;" : "")">
    <Navbar />
    <div>
        <AuthorizeView>
            <Authorized>
                <p class="welcome-text"> Hey @context.User.Claims.FirstOrDefault(c => c.Type == "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname")?.Value!</p>

                @if (data != null)
                {
                    <PositivityWidget data="data" />
                }
                else
                {
                    <p>Loading...</p>
                }

            </Authorized>
        </AuthorizeView>
    </div>
</div>



@code 
{
    private Thoughts data;

    protected override async Task OnInitializedAsync()
    {
        var config = new ConfigurationBuilder()
    .AddJsonFile("appsettings.json", optional: true, reloadOnChange: true)
    .AddEnvironmentVariables()
    .Build();

        var httpClient = HttpClientFactory.CreateClient();
        data = await httpClient.GetFromJsonAsync<Thoughts>($"{config["ASPIRE_WEBAPISERVICE"]}/thoughts");
    }
}
